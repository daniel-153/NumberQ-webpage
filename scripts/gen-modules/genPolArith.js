import*as H from"../helper-modules/gen-helpers.js";import*as PH from"../helper-modules/polynom-helpers.js";export default function genPolArith(){let e,r=H.randInt(2,5),o=6-(r-1),i=[],t,n;for(let e=1;e<=r;e++)i.push(H.randInt(-1*o,o));var a=PH.expandBinomials(i),l=(a=(n=5!==H.randInt(0,5)?(t=H.randFromList(i),e=PH.dividePolynomial(a,t).quotient,{coefficients:a,divisor:t,quotient:e}):(l=H.removeFromArray(0,H.integerArray(-1*o,o)),l=H.removeFromArray(i,l),{coefficients:a,divisor:t=0!==l.length?H.randFromList(l):H.randFromList([-1*(1+o),1+o]),quotient:"R="+PH.dividePolynomial(a,t).remainder})).coefficients,t=n.divisor,n.quotient);return{question:"\\frac{"+PH.polyTemplateToMath(a)+"}{"+PH.polyTemplateToMath([1,-1*t])+"}",answer:Array.isArray(l)?PH.polyTemplateToMath(l):l}}